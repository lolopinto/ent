{{reserveImport "graphql" "GraphQLSchema" "GraphQLObjectType" "GraphQLInputObjectType" "GraphQLID" "GraphQLString" "GraphQLEnumType" "GraphQLNonNull" "GraphQLList" "GraphQLFloat" "GraphQLInt" "GraphQLFieldConfig" "GraphQLFieldConfigMap" "GraphQLResolveInfo" "GraphQLInputFieldConfigMap" "GraphQLBoolean" }}
{{reserveImport .Package.PackagePath "ID" "RequestContext" }}
{{reserveImport .Package.GraphQLPackagePath "GraphQLTime" "GraphQLEdgeType" "GraphQLConnectionType" }}

{{/* import types that we may need e.g. UserType, ContactType, etc */}}
{{ range .Imports -}} 
  {{reserveImport .ImportPath .Type}}
{{ end -}}

export const {{ printf "%sType" .Edge.GetGraphQLConnectionName}} = () => {
  return new {{useImport "GraphQLConnectionType"}}(
   "{{.Edge.TsEdgeConst}}",
   {{useImport .NodeType }},
  );
}
