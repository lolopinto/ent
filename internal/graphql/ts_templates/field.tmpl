{{$gqlNode := .Node -}}
{{$baseObj := .Base -}}
{{$nodeInstance := .NodeInstance -}}

{{ range $field := $gqlNode.Fields -}}
  {{$field.Name}}: {
    {{range $import := $field.AllImports -}}
      {{ if $baseObj.ForeignImport $import.Import -}}
        {{$ignore := useImport $import.Import -}}
      {{end -}}
    {{end -}}
    {{ if $field.Description -}}
      description: "{{$field.Description}}",
    {{end -}}
    type: {{$field.FieldType}},
    {{ template "render_args.tmpl" (dict "Base" $baseObj "Args" $field.Args) -}}
    {{if $field.ResolverMethod -}}
      {{ if $baseObj.ForeignImport $field.ResolverMethod -}}
        {{ $ignore := useImport $field.ResolverMethod -}}
      {{end -}}
      resolve: {{useImport $field.ResolverMethod}},
    {{else if $field.HasResolveFunction -}}
      {{/* TODO render actual args instead of any */ -}}
      {{$args := "{}" -}}
      {{ if gt (len $field.Args) 0 -}}
        {{$args = "any" -}}
      {{ end -}}
      {{if $field.HasAsyncModifier -}}
        resolve: async({{$nodeInstance}}: {{$gqlNode.TSType}}, args: {{$args}}, context: {{useImport "RequestContext"}}) => {
      {{ else -}}
        resolve: ({{$nodeInstance}}: {{$gqlNode.TSType}}, args: {{$args}}, context: {{useImport "RequestContext"}}) => {
      {{ end -}}
        {{ range $field.FunctionContents -}}
          {{.}}
        {{ end -}}
      },
    {{end -}}
  },
{{end -}}
