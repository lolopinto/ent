{{ reserveImport .Package.InternalImportPath "EdgeType" "NodeType" }}
{{ reserveImport .Package.PackagePath "Ent" "ID" "Data" "Viewer" "EdgeQuerySource" "BaseEdgeQuery"}}

{{with .NodeData -}}

{{ range .GetImportsForBaseFile -}} 
  {{ if .DefaultImport -}}
    {{ reserveDefaultImport .PackagePath .Import}}
  {{ else -}}
    {{ reserveImport .PackagePath .Import}}
  {{end -}}
{{ end}}

{{$node := .Node}}
{{range $edge := .EdgeInfo.Associations -}}
  {{$name := printf "%sQuery" $edge.TsEdgeConst -}}
export class {{$name}} extends {{useImport "BaseEdgeQuery"}}<{{$node}}, {{useImport .NodeInfo.Node}}> {
  constructor(viewer: {{useImport "Viewer"}}, src: {{useImport "EdgeQuerySource"}}<{{$node}}>) {
    super(viewer, src, {{useImport "EdgeType"}}.{{$edge.TsEdgeConst}}, {{useImport .NodeInfo.Node}}.loaderOptions());
  }

  static query(
    viewer: {{useImport "Viewer"}},
    src: {{useImport "EdgeQuerySource"}}<{{$node}}>,
  ): {{$name}} {
    return new {{$name}}(viewer, src);
  }
}
{{end -}}
{{end -}}