{{ reserveImport .Package.PackagePath "loadEnt" "ID" "Data"  "loadEntX" "loadEnts" "LoadEntOptions" "loadNodesByEdge" "loadRow" "loadRows" "loadRowX" "loadUniqueEdge" "loadUniqueNode" "AllowIfViewerPrivacyPolicy" "PrivacyPolicy" "query" "Ent" "getEdgeTypeInGroup" "ObjectLoaderFactory" "Context" "loadEntViaKey" "loadEntXViaKey" "CustomQuery" "loadCustomEnts" "loadCustomData" "applyPrivacyPolicy" "Ent" "Viewer" "Data"}}

{{$p := .Pattern}}
{{$cfg := .Config}}
{{$schema := .Schema}}

{{ reserveImport $p.GetImportPathForMixinBase  $p.GetMixinBaseName $p.GetPatternMethod $p.GetMixinInterfaceBaseName -}}

export { {{useImport $p.GetPatternMethod }} };

type Constructor<T = {}> = new (...args: any[]) => T;

{{ range $p.GetImportsForMixin $schema $cfg -}} 
  {{ reserveImportPath . false -}}
{{ end}}


export interface {{$p.GetMixinInterfaceName}} extends {{useImport $p.GetMixinInterfaceBaseName }} {
  // add custom fields
}


export function {{$p.GetMixinName}}<T extends Constructor>(BaseClass: T) {
  return class {{$p.GetMixinName}} extends {{useImport $p.GetMixinBaseName}}(BaseClass) implements {{$p.GetMixinInterfaceName}} {
  // add custom fields implementation
  };
}