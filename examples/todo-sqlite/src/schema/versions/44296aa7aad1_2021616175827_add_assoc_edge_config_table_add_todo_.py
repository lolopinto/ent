# Code generated by github.com/lolopinto/ent/ent, DO NOT edit.

"""add assoc_edge_config table
add todo_tags_edges table
add index todo_tags_edges_time_idx to todo_tags_edges
add edges TagToTodosEdge, TodoToTagsEdge

Revision ID: 44296aa7aad1
Revises: 9cb0712ecc8f
Create Date: 2021-06-16 17:58:27.721854+00:00

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision = '44296aa7aad1'
down_revision = '9cb0712ecc8f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('assoc_edge_config',
                    sa.Column('edge_type', sa.Text(), nullable=False),
                    sa.Column('edge_name', sa.Text(), nullable=False),
                    sa.Column('symmetric_edge', sa.Boolean(),
                              server_default='false', nullable=False),
                    sa.Column('inverse_edge_type', sa.Text(), nullable=True),
                    sa.Column('edge_table', sa.Text(), nullable=False),
                    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
                    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
                    sa.ForeignKeyConstraint(['inverse_edge_type'], ['assoc_edge_config.edge_type'],
                                            name='assoc_edge_config_inverse_edge_type_fkey', ondelete='RESTRICT'),
                    sa.PrimaryKeyConstraint(
                        'edge_type', name='assoc_edge_config_edge_type_pkey'),
                    sa.UniqueConstraint(
                        'edge_name', name='assoc_edge_config_unique_edge_name')
                    )
    op.create_table('todo_tags_edges',
                    sa.Column('id1', sa.Text(), nullable=False),
                    sa.Column('id1_type', sa.Text(), nullable=False),
                    sa.Column('edge_type', sa.Text(), nullable=False),
                    sa.Column('id2', sa.Text(), nullable=False),
                    sa.Column('id2_type', sa.Text(), nullable=False),
                    sa.Column('time', sa.TIMESTAMP(), nullable=False),
                    sa.Column('data', sa.Text(), nullable=True),
                    sa.PrimaryKeyConstraint('id1', 'edge_type', 'id2',
                                            name='todo_tags_edges_id1_edge_type_id2_pkey')
                    )
    op.create_index('todo_tags_edges_time_idx',
                    'todo_tags_edges', ['time'], unique=False)
    op.add_edges([
        {'edge_name': 'TagToTodosEdge', 'edge_type': '33dd169d-a290-4d3f-8b09-b74628bec247', 'edge_table': 'todo_tags_edges',
            'symmetric_edge': False, 'inverse_edge_type': '546160e1-224a-42ef-92c7-46089ab5e06e'},
        {'edge_name': 'TodoToTagsEdge', 'edge_type': '546160e1-224a-42ef-92c7-46089ab5e06e', 'edge_table': 'todo_tags_edges',
            'symmetric_edge': False, 'inverse_edge_type': '33dd169d-a290-4d3f-8b09-b74628bec247'},
    ])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.remove_edges([
        {'edge_name': 'TagToTodosEdge', 'edge_type': '33dd169d-a290-4d3f-8b09-b74628bec247', 'edge_table': 'todo_tags_edges',
            'symmetric_edge': False, 'inverse_edge_type': '546160e1-224a-42ef-92c7-46089ab5e06e'},
        {'edge_name': 'TodoToTagsEdge', 'edge_type': '546160e1-224a-42ef-92c7-46089ab5e06e', 'edge_table': 'todo_tags_edges',
            'symmetric_edge': False, 'inverse_edge_type': '33dd169d-a290-4d3f-8b09-b74628bec247'},
    ])

    op.drop_index('todo_tags_edges_time_idx', table_name='todo_tags_edges')
    op.drop_table('todo_tags_edges')
    op.drop_table('assoc_edge_config')
    # ### end Alembic commands ###
