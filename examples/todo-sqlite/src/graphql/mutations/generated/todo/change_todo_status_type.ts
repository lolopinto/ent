// Generated by github.com/lolopinto/ent/ent, DO NOT EDIT.

import {
  GraphQLBoolean,
  GraphQLFieldConfig,
  GraphQLFieldConfigMap,
  GraphQLID,
  GraphQLInputFieldConfigMap,
  GraphQLInputObjectType,
  GraphQLNonNull,
  GraphQLObjectType,
  GraphQLResolveInfo,
} from "graphql";
import { RequestContext } from "@snowtop/ent";
import { Todo } from "src/ent/";
import ChangeTodoStatusAction, {
  ChangeTodoStatusInput,
} from "src/ent/todo/actions/change_todo_status_action";
import { TodoType } from "src/graphql/resolvers/";

interface customChangeTodoStatusInput extends ChangeTodoStatusInput {
  todo_id: string;
}

interface ChangeTodoStatusPayload {
  todo: Todo;
}

export const ChangeTodoStatusInputType = new GraphQLInputObjectType({
  name: "ChangeTodoStatusInput",
  fields: (): GraphQLInputFieldConfigMap => ({
    todo_id: {
      description: "id of Todo",
      type: GraphQLNonNull(GraphQLID),
    },
    completed: {
      type: GraphQLBoolean,
    },
  }),
});

export const ChangeTodoStatusPayloadType = new GraphQLObjectType({
  name: "ChangeTodoStatusPayload",
  fields: (): GraphQLFieldConfigMap<
    ChangeTodoStatusPayload,
    RequestContext
  > => ({
    todo: {
      type: GraphQLNonNull(TodoType),
    },
  }),
});

export const ChangeTodoStatusType: GraphQLFieldConfig<
  undefined,
  RequestContext,
  { [input: string]: customChangeTodoStatusInput }
> = {
  type: GraphQLNonNull(ChangeTodoStatusPayloadType),
  args: {
    input: {
      description: "",
      type: GraphQLNonNull(ChangeTodoStatusInputType),
    },
  },
  resolve: async (
    _source,
    { input },
    context: RequestContext,
    _info: GraphQLResolveInfo,
  ): Promise<ChangeTodoStatusPayload> => {
    const todo = await ChangeTodoStatusAction.saveXFromID(
      context.getViewer(),
      input.todo_id,
      {
        completed: input.completed,
      },
    );
    return { todo: todo };
  },
};
