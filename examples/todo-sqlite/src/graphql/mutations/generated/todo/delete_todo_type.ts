// Generated by github.com/lolopinto/ent/ent, DO NOT EDIT.

import {
  GraphQLFieldConfig,
  GraphQLFieldConfigMap,
  GraphQLID,
  GraphQLInputFieldConfigMap,
  GraphQLInputObjectType,
  GraphQLNonNull,
  GraphQLObjectType,
  GraphQLResolveInfo,
} from "graphql";
import { RequestContext } from "@snowtop/ent";
import DeleteTodoAction from "src/ent/todo/actions/delete_todo_action";

interface customDeleteTodoInput {
  todoID: string;
}

interface DeleteTodoPayload {
  deletedTodoID: string;
}

export const DeleteTodoInputType = new GraphQLInputObjectType({
  name: "DeleteTodoInput",
  fields: (): GraphQLInputFieldConfigMap => ({
    todoID: {
      description: "id of Todo",
      type: GraphQLNonNull(GraphQLID),
    },
  }),
});

export const DeleteTodoPayloadType = new GraphQLObjectType({
  name: "DeleteTodoPayload",
  fields: (): GraphQLFieldConfigMap<DeleteTodoPayload, RequestContext> => ({
    deletedTodoID: {
      type: GraphQLID,
    },
  }),
});

export const DeleteTodoType: GraphQLFieldConfig<
  undefined,
  RequestContext,
  { [input: string]: customDeleteTodoInput }
> = {
  type: GraphQLNonNull(DeleteTodoPayloadType),
  args: {
    input: {
      description: "",
      type: GraphQLNonNull(DeleteTodoInputType),
    },
  },
  resolve: async (
    _source,
    { input },
    context: RequestContext,
    _info: GraphQLResolveInfo,
  ): Promise<DeleteTodoPayload> => {
    await DeleteTodoAction.saveXFromID(context.getViewer(), input.todoID);
    return { deletedTodoID: input.todoID };
  },
};
