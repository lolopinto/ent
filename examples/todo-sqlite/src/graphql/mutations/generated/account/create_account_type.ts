// Generated by github.com/lolopinto/ent/ent, DO NOT EDIT.

import {
  GraphQLFieldConfig,
  GraphQLFieldConfigMap,
  GraphQLInputFieldConfigMap,
  GraphQLInputObjectType,
  GraphQLNonNull,
  GraphQLObjectType,
  GraphQLResolveInfo,
  GraphQLString,
} from "graphql";
import { RequestContext } from "@snowtop/ent";
import { Account, AccountState } from "src/ent/";
import CreateAccountAction, {
  AccountCreateInput,
} from "src/ent/account/actions/create_account_action";
import { AccountStateType, AccountType } from "src/graphql/resolvers/";

interface customCreateAccountInput
  extends Omit<AccountCreateInput, "phoneNumber" | "accountState"> {
  phone_number: string;
  account_state?: AccountState | null;
}

interface CreateAccountPayload {
  account: Account;
}

export const CreateAccountInputType = new GraphQLInputObjectType({
  name: "CreateAccountInput",
  fields: (): GraphQLInputFieldConfigMap => ({
    name: {
      type: new GraphQLNonNull(GraphQLString),
    },
    phone_number: {
      type: new GraphQLNonNull(GraphQLString),
    },
    account_state: {
      type: AccountStateType,
    },
  }),
});

export const CreateAccountPayloadType = new GraphQLObjectType({
  name: "CreateAccountPayload",
  fields: (): GraphQLFieldConfigMap<CreateAccountPayload, RequestContext> => ({
    account: {
      type: new GraphQLNonNull(AccountType),
    },
  }),
});

export const CreateAccountType: GraphQLFieldConfig<
  undefined,
  RequestContext,
  { [input: string]: customCreateAccountInput }
> = {
  type: new GraphQLNonNull(CreateAccountPayloadType),
  args: {
    input: {
      description: "",
      type: new GraphQLNonNull(CreateAccountInputType),
    },
  },
  resolve: async (
    _source,
    { input },
    context: RequestContext,
    _info: GraphQLResolveInfo,
  ): Promise<CreateAccountPayload> => {
    const account = await CreateAccountAction.create(context.getViewer(), {
      name: input.name,
      phoneNumber: input.phone_number,
      accountState: input.account_state,
    }).saveX();
    return { account: account };
  },
};
