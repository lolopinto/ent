// Generated by github.com/lolopinto/ent/ent, DO NOT EDIT.

import {
  GraphQLFieldConfig,
  GraphQLFieldConfigMap,
  GraphQLID,
  GraphQLInputFieldConfigMap,
  GraphQLInputObjectType,
  GraphQLNonNull,
  GraphQLObjectType,
  GraphQLResolveInfo,
} from "graphql";
import { RequestContext } from "@snowtop/ent";
import DeleteAccountAction from "src/ent/account/actions/delete_account_action";

interface customAccountDeleteInput {
  accountID: string;
}

interface AccountDeletePayload {
  deletedAccountID: string;
}

export const AccountDeleteInputType = new GraphQLInputObjectType({
  name: "AccountDeleteInput",
  fields: (): GraphQLInputFieldConfigMap => ({
    accountID: {
      type: GraphQLNonNull(GraphQLID),
    },
  }),
});

export const AccountDeletePayloadType = new GraphQLObjectType({
  name: "AccountDeletePayload",
  fields: (): GraphQLFieldConfigMap<AccountDeletePayload, RequestContext> => ({
    deletedAccountID: {
      type: GraphQLID,
    },
  }),
});

export const AccountDeleteType: GraphQLFieldConfig<
  undefined,
  RequestContext,
  { [input: string]: customAccountDeleteInput }
> = {
  type: GraphQLNonNull(AccountDeletePayloadType),
  args: {
    input: {
      description: "",
      type: GraphQLNonNull(AccountDeleteInputType),
    },
  },
  resolve: async (
    _source,
    { input },
    context: RequestContext,
    _info: GraphQLResolveInfo,
  ): Promise<AccountDeletePayload> => {
    await DeleteAccountAction.saveXFromID(context.getViewer(), input.accountID);
    return { deletedAccountID: input.accountID };
  },
};
