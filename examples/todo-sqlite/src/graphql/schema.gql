type Account implements Node {
  id: ID!
  name: String!
  phoneNumber: String!
  todos(first: Int, after: String, last: Int, before: String): AccountToTodosConnection!
}

"""node interface"""
interface Node {
  id: ID!
}

type Todo implements Node {
  creator: Account
  id: ID!
  text: String!
  completed: Boolean!
}

type AccountToTodosConnection implements Connection {
  edges: [AccountToTodosEdge!]!
  nodes: [Todo!]!
  pageInfo: PageInfo!
  rawCount: Int!
}

"""connection interface"""
interface Connection {
  edges: [Edge!]!
  nodes: [Node!]!
  pageInfo: PageInfo!
}

"""edge interface"""
interface Edge {
  node: Node!
  cursor: String!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String!
  endCursor: String!
}

type AccountToTodosEdge implements Edge {
  node: Todo!
  cursor: String!
}

input AccountCreateInput {
  name: String!
  phoneNumber: String!
}

type AccountCreatePayload {
  account: Account!
}

input AccountDeleteInput {
  accountID: ID!
}

type AccountDeletePayload {
  deletedAccountID: ID
}

input AccountEditInput {
  accountID: ID!
  name: String
  phoneNumber: String
}

type AccountEditPayload {
  account: Account!
}

input TodoChangeStatusInput {
  todoID: ID!
  completed: Boolean
}

type TodoChangeStatusPayload {
  todo: Todo!
}

input TodoCreateInput {
  text: String!
  creatorID: ID!
}

type TodoCreatePayload {
  todo: Todo!
}

input TodoDeleteInput {
  todoID: ID!
}

type TodoDeletePayload {
  deletedTodoID: ID
}

input TodoRenameInput {
  todoID: ID!
  text: String
}

type TodoRenamePayload {
  todo: Todo!
}

type Query {
  node(id: ID!): Node
}

type Mutation {
  accountCreate(input: AccountCreateInput!): AccountCreatePayload!
  accountDelete(input: AccountDeleteInput!): AccountDeletePayload!
  accountEdit(input: AccountEditInput!): AccountEditPayload!
  todoChangeStatus(input: TodoChangeStatusInput!): TodoChangeStatusPayload!
  todoCreate(input: TodoCreateInput!): TodoCreatePayload!
  todoDelete(input: TodoDeleteInput!): TodoDeletePayload!
  todoRename(input: TodoRenameInput!): TodoRenamePayload!
  todosMarkAllAs(accountID: ID!, completed: Boolean!): Account!
  todosRemoveCompleted(accountID: ID!): Account!
}
