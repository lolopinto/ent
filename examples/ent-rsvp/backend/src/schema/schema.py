# Code generated by github.com/lolopinto/ent/ent, DO NOT edit. (TODO figure out correct pythonic way of doing this)

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

metadata = sa.MetaData()

 
sa.Table("addresses", metadata,
    sa.Column("id", sa.Text(), nullable=False),
    sa.Column("created_at", sa.TIMESTAMP(), nullable=False),
    sa.Column("updated_at", sa.TIMESTAMP(), nullable=False),
    sa.Column("street", sa.Text(), nullable=False),
    sa.Column("city", sa.Text(), nullable=False),
    sa.Column("state", sa.Text(), nullable=False),
    sa.Column("zip_code", sa.Text(), nullable=False),
    sa.Column("apartment", sa.Text(), nullable=True),
    sa.Column("owner_id", sa.Text(), nullable=False),
    sa.Column("owner_type", sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint("id", name="addresses_id_pkey"),
    sa.UniqueConstraint("owner_id", name="addresses_unique_owner_id"),
)
   
sa.Table("assoc_edge_config", metadata,
    sa.Column("edge_type", sa.Text(), nullable=False),
    sa.Column("edge_name", sa.Text(), nullable=False),
    sa.Column("symmetric_edge", sa.Boolean(), nullable=False, server_default='false'),
    sa.Column("inverse_edge_type", sa.Text(), nullable=True),
    sa.Column("edge_table", sa.Text(), nullable=False),
    sa.Column("created_at", sa.TIMESTAMP(), nullable=False),
    sa.Column("updated_at", sa.TIMESTAMP(), nullable=False),
    sa.PrimaryKeyConstraint("edge_type", name="assoc_edge_config_edge_type_pkey"),
    sa.UniqueConstraint("edge_name", name="assoc_edge_config_unique_edge_name"),
    sa.ForeignKeyConstraint(["inverse_edge_type"], ["assoc_edge_config.edge_type"], name="assoc_edge_config_inverse_edge_type_fkey", ondelete="RESTRICT"),
)
   
sa.Table("auth_codes", metadata,
    sa.Column("id", sa.Text(), nullable=False),
    sa.Column("created_at", sa.TIMESTAMP(), nullable=False),
    sa.Column("updated_at", sa.TIMESTAMP(), nullable=False),
    sa.Column("code", sa.Text(), nullable=False),
    sa.Column("guest_id", sa.Text(), nullable=False),
    sa.Column("email_address", sa.Text(), nullable=False),
    sa.Column("sent_code", sa.Boolean(), nullable=False, server_default='FALSE'),
    sa.PrimaryKeyConstraint("id", name="auth_codes_id_pkey"),
    sa.UniqueConstraint("guest_id", name="auth_codes_unique_guest_id"),
    sa.ForeignKeyConstraint(["guest_id"], ["guests.id"], name="auth_codes_guest_id_fkey", ondelete="CASCADE"),
    sa.UniqueConstraint("email_address", "code", name="uniqueCode"),
)
   
sa.Table("event_activities", metadata,
    sa.Column("id", sa.Text(), nullable=False),
    sa.Column("created_at", sa.TIMESTAMP(), nullable=False),
    sa.Column("updated_at", sa.TIMESTAMP(), nullable=False),
    sa.Column("name", sa.Text(), nullable=False),
    sa.Column("event_id", sa.Text(), nullable=False),
    sa.Column("start_time", sa.TIMESTAMP(), nullable=False),
    sa.Column("end_time", sa.TIMESTAMP(), nullable=True),
    sa.Column("location", sa.Text(), nullable=False),
    sa.Column("description", sa.Text(), nullable=True),
    sa.Column("invite_all_guests", sa.Boolean(), nullable=False, server_default='FALSE'),
    sa.Index("event_activities_event_id_idx", "event_id"),
    sa.PrimaryKeyConstraint("id", name="event_activities_id_pkey"),
    sa.ForeignKeyConstraint(["event_id"], ["events.id"], name="event_activities_event_id_fkey", ondelete="CASCADE"),
)
   
sa.Table("event_rsvps", metadata,
    sa.Column("id1", sa.Text(), nullable=False),
    sa.Column("id1_type", sa.Text(), nullable=False),
    sa.Column("edge_type", sa.Text(), nullable=False),
    sa.Column("id2", sa.Text(), nullable=False),
    sa.Column("id2_type", sa.Text(), nullable=False),
    sa.Column("time", sa.TIMESTAMP(), nullable=False),
    sa.Column("data", sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint("id1", "edge_type", "id2", name="event_rsvps_id1_edge_type_id2_pkey"),
    sa.Index("event_rsvps_time_idx", "time"),
)
   
sa.Table("events", metadata,
    sa.Column("id", sa.Text(), nullable=False),
    sa.Column("created_at", sa.TIMESTAMP(), nullable=False),
    sa.Column("updated_at", sa.TIMESTAMP(), nullable=False),
    sa.Column("name", sa.Text(), nullable=False),
    sa.Column("slug", sa.Text(), nullable=True),
    sa.Column("creator_id", sa.Text(), nullable=False),
    sa.Index("events_creator_id_idx", "creator_id"),
    sa.PrimaryKeyConstraint("id", name="events_id_pkey"),
    sa.UniqueConstraint("slug", name="events_unique_slug"),
    sa.ForeignKeyConstraint(["creator_id"], ["users.id"], name="events_creator_id_fkey", ondelete="CASCADE"),
)
   
sa.Table("guest_data", metadata,
    sa.Column("id", sa.Text(), nullable=False),
    sa.Column("created_at", sa.TIMESTAMP(), nullable=False),
    sa.Column("updated_at", sa.TIMESTAMP(), nullable=False),
    sa.Column("guest_id", sa.Text(), nullable=False),
    sa.Column("event_id", sa.Text(), nullable=False),
    sa.Column("dietary_restrictions", sa.Text(), nullable=False),
    sa.Column("source", sa.Text(), nullable=True),
    sa.Index("guest_data_guest_id_idx", "guest_id"),
    sa.Index("guest_data_event_id_idx", "event_id"),
    sa.PrimaryKeyConstraint("id", name="guest_data_id_pkey"),
    sa.ForeignKeyConstraint(["guest_id"], ["guests.id"], name="guest_data_guest_id_fkey", ondelete="CASCADE"),
    sa.ForeignKeyConstraint(["event_id"], ["events.id"], name="guest_data_event_id_fkey", ondelete="CASCADE"),
)
   
sa.Table("guest_groups", metadata,
    sa.Column("id", sa.Text(), nullable=False),
    sa.Column("created_at", sa.TIMESTAMP(), nullable=False),
    sa.Column("updated_at", sa.TIMESTAMP(), nullable=False),
    sa.Column("invitation_name", sa.Text(), nullable=False),
    sa.Column("event_id", sa.Text(), nullable=False),
    sa.Index("guest_groups_event_id_idx", "event_id"),
    sa.PrimaryKeyConstraint("id", name="guest_groups_id_pkey"),
    sa.ForeignKeyConstraint(["event_id"], ["events.id"], name="guest_groups_event_id_fkey", ondelete="CASCADE"),
)
   
sa.Table("guests", metadata,
    sa.Column("id", sa.Text(), nullable=False),
    sa.Column("created_at", sa.TIMESTAMP(), nullable=False),
    sa.Column("updated_at", sa.TIMESTAMP(), nullable=False),
    sa.Column("name", sa.Text(), nullable=False),
    sa.Column("event_id", sa.Text(), nullable=False),
    sa.Column("email_address", sa.Text(), nullable=True),
    sa.Column("guest_group_id", sa.Text(), nullable=False),
    sa.Column("title", sa.Text(), nullable=True),
    sa.Index("guests_event_id_idx", "event_id"),
    sa.Index("guests_guest_group_id_idx", "guest_group_id"),
    sa.PrimaryKeyConstraint("id", name="guests_id_pkey"),
    sa.ForeignKeyConstraint(["event_id"], ["events.id"], name="guests_event_id_fkey", ondelete="CASCADE"),
    sa.ForeignKeyConstraint(["guest_group_id"], ["guest_groups.id"], name="guests_guest_group_id_fkey", ondelete="CASCADE"),
    sa.UniqueConstraint("event_id", "email_address", name="uniqueEmail"),
)
   
sa.Table("users", metadata,
    sa.Column("id", sa.Text(), nullable=False),
    sa.Column("created_at", sa.TIMESTAMP(), nullable=False),
    sa.Column("updated_at", sa.TIMESTAMP(), nullable=False),
    sa.Column("first_name", sa.Text(), nullable=False),
    sa.Column("last_name", sa.Text(), nullable=False),
    sa.Column("email_address", sa.Text(), nullable=False),
    sa.Column("password", sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint("id", name="users_id_pkey"),
    sa.UniqueConstraint("email_address", name="users_unique_email_address"),
)
  

metadata.info["edges"] = {
  'public': {
    'EventActivityToAttendingEdge': {"edge_name":"EventActivityToAttendingEdge", "edge_type":"cf220786-38b9-49c8-afbb-73a048a3061b", "edge_table":"event_rsvps", "symmetric_edge":False, "inverse_edge_type":"ddce2db4-5889-4077-9ff6-929ed25248a0"},
    'EventActivityToDeclinedEdge': {"edge_name":"EventActivityToDeclinedEdge", "edge_type":"e68ad909-8280-473e-bdd5-3b34e8567841", "edge_table":"event_rsvps", "symmetric_edge":False, "inverse_edge_type":"94e81597-477f-4448-8c41-31a612788c49"},
    'EventActivityToInvitesEdge': {"edge_name":"EventActivityToInvitesEdge", "edge_type":"ee9b49ba-916d-4dab-aeb3-7f2c453287f2", "edge_table":"event_rsvps", "symmetric_edge":False, "inverse_edge_type":"0486d3ab-3066-4046-b6c6-9a28fdef5c1f"},
    'GuestGroupToInvitedEventsEdge': {"edge_name":"GuestGroupToInvitedEventsEdge", "edge_type":"0486d3ab-3066-4046-b6c6-9a28fdef5c1f", "edge_table":"event_rsvps", "symmetric_edge":False, "inverse_edge_type":"ee9b49ba-916d-4dab-aeb3-7f2c453287f2"},
    'GuestToAttendingEventsEdge': {"edge_name":"GuestToAttendingEventsEdge", "edge_type":"ddce2db4-5889-4077-9ff6-929ed25248a0", "edge_table":"event_rsvps", "symmetric_edge":False, "inverse_edge_type":"cf220786-38b9-49c8-afbb-73a048a3061b"},
    'GuestToDeclinedEventsEdge': {"edge_name":"GuestToDeclinedEventsEdge", "edge_type":"94e81597-477f-4448-8c41-31a612788c49", "edge_table":"event_rsvps", "symmetric_edge":False, "inverse_edge_type":"e68ad909-8280-473e-bdd5-3b34e8567841"},
  }
}



def get_metadata():
  return metadata
