// Generated by github.com/lolopinto/ent/ent, DO NOT EDIT.

import {
  GraphQLObjectType,
  GraphQLInputObjectType,
  GraphQLID,
  GraphQLString,
  GraphQLNonNull,
  GraphQLFieldConfig,
  GraphQLFieldConfigMap,
  GraphQLResolveInfo,
  GraphQLInputFieldConfigMap,
} from "graphql";
import { RequestContext } from "@lolopinto/ent";
import { mustDecodeIDFromGQLID } from "@lolopinto/ent/graphql";
import { Guest } from "src/ent/";
import { GuestType } from "src/graphql/resolvers/";
import EditGuestAction, {
  GuestEditInput,
} from "src/ent/guest/actions/edit_guest_action";

interface customGuestEditInput extends GuestEditInput {
  guestID: string;
  eventID: string;
  guestGroupID: string;
}

interface GuestEditPayload {
  guest: Guest;
}

export const GuestEditInputType = new GraphQLInputObjectType({
  name: "GuestEditInput",
  fields: (): GraphQLInputFieldConfigMap => ({
    guestID: {
      type: GraphQLNonNull(GraphQLID),
    },
    firstName: {
      type: GraphQLString,
    },
    lastName: {
      type: GraphQLString,
    },
    emailAddress: {
      type: GraphQLString,
    },
    eventID: {
      type: GraphQLID,
    },
    guestGroupID: {
      type: GraphQLID,
    },
  }),
});

export const GuestEditPayloadType = new GraphQLObjectType({
  name: "GuestEditPayload",
  fields: (): GraphQLFieldConfigMap<GuestEditPayload, RequestContext> => ({
    guest: {
      type: GraphQLNonNull(GuestType),
    },
  }),
});

export const GuestEditType: GraphQLFieldConfig<
  undefined,
  RequestContext,
  { [input: string]: customGuestEditInput }
> = {
  type: GraphQLNonNull(GuestEditPayloadType),
  args: {
    input: {
      description: "",
      type: GraphQLNonNull(GuestEditInputType),
    },
  },
  resolve: async (
    _source,
    { input },
    context: RequestContext,
    _info: GraphQLResolveInfo,
  ): Promise<GuestEditPayload> => {
    let guest = await EditGuestAction.saveXFromID(
      context.getViewer(),
      mustDecodeIDFromGQLID(input.guestID),
      {
        firstName: input.firstName,
        lastName: input.lastName,
        emailAddress: input.emailAddress,
      },
    );
    return { guest: guest };
  },
};
