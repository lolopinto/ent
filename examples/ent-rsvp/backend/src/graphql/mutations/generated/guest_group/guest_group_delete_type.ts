// Generated by github.com/lolopinto/ent/ent, DO NOT EDIT.

import {
  GraphQLObjectType,
  GraphQLInputObjectType,
  GraphQLID,
  GraphQLNonNull,
  GraphQLFieldConfig,
  GraphQLFieldConfigMap,
  GraphQLResolveInfo,
  GraphQLInputFieldConfigMap,
} from "graphql";
import { RequestContext } from "@lolopinto/ent";
import { mustDecodeIDFromGQLID } from "@lolopinto/ent/graphql";
import { GuestGroup } from "src/ent/";
import DeleteGuestGroupAction from "src/ent/guest_group/actions/delete_guest_group_action";

interface customGuestGroupDeleteInput {
  guestGroupID: string;
}

interface GuestGroupDeletePayload {
  deletedGuestGroupID: string;
}

export const GuestGroupDeleteInputType = new GraphQLInputObjectType({
  name: "GuestGroupDeleteInput",
  fields: (): GraphQLInputFieldConfigMap => ({
    guestGroupID: {
      type: GraphQLNonNull(GraphQLID),
    },
  }),
});

export const GuestGroupDeletePayloadType = new GraphQLObjectType({
  name: "GuestGroupDeletePayload",
  fields: (): GraphQLFieldConfigMap<
    GuestGroupDeletePayload,
    RequestContext
  > => ({
    deletedGuestGroupID: {
      type: GraphQLID,
    },
  }),
});

export const GuestGroupDeleteType: GraphQLFieldConfig<
  undefined,
  RequestContext,
  { [input: string]: customGuestGroupDeleteInput }
> = {
  type: GraphQLNonNull(GuestGroupDeletePayloadType),
  args: {
    input: {
      description: "",
      type: GraphQLNonNull(GuestGroupDeleteInputType),
    },
  },
  resolve: async (
    _source,
    { input },
    context: RequestContext,
    _info: GraphQLResolveInfo,
  ): Promise<GuestGroupDeletePayload> => {
    await DeleteGuestGroupAction.saveXFromID(
      context.getViewer(),
      mustDecodeIDFromGQLID(input.guestGroupID),
    );
    return { deletedGuestGroupID: input.guestGroupID };
  },
};
