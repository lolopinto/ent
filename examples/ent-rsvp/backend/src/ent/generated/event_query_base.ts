// Generated by github.com/lolopinto/ent/ent, DO NOT EDIT.

import { CustomEdgeQueryBase, ID, Viewer } from "@snowtop/ent";
import {
  Event,
  EventActivity,
  Guest,
  GuestData,
  GuestGroup,
} from "src/ent/internal";

export class EventToEventActivitiesQueryBase extends CustomEdgeQueryBase<
  Event,
  EventActivity,
  Viewer
> {
  constructor(viewer: Viewer, src: Event | ID, sortColumn?: string) {
    super(viewer, {
      src: src,
      groupCol: "event_id",
      loadEntOptions: EventActivity.loaderOptions(),
      name: "EventToEventActivitiesQuery",
      sortColumn,
    });
  }

  static query<T extends EventToEventActivitiesQueryBase>(
    this: new (
      viewer: Viewer,
      src: Event | ID,
    ) => T,
    viewer: Viewer,
    src: Event | ID,
  ): T {
    return new this(viewer, src);
  }

  async sourceEnt(id: ID) {
    return Event.load(this.viewer, id);
  }
}

export class EventToGuestDataQueryBase extends CustomEdgeQueryBase<
  Event,
  GuestData,
  Viewer
> {
  constructor(viewer: Viewer, src: Event | ID, sortColumn?: string) {
    super(viewer, {
      src: src,
      groupCol: "event_id",
      loadEntOptions: GuestData.loaderOptions(),
      name: "EventToGuestDataQuery",
      sortColumn,
    });
  }

  static query<T extends EventToGuestDataQueryBase>(
    this: new (
      viewer: Viewer,
      src: Event | ID,
    ) => T,
    viewer: Viewer,
    src: Event | ID,
  ): T {
    return new this(viewer, src);
  }

  async sourceEnt(id: ID) {
    return Event.load(this.viewer, id);
  }
}

export class EventToGuestGroupsQueryBase extends CustomEdgeQueryBase<
  Event,
  GuestGroup,
  Viewer
> {
  constructor(viewer: Viewer, src: Event | ID, sortColumn?: string) {
    super(viewer, {
      src: src,
      groupCol: "event_id",
      loadEntOptions: GuestGroup.loaderOptions(),
      name: "EventToGuestGroupsQuery",
      sortColumn,
    });
  }

  static query<T extends EventToGuestGroupsQueryBase>(
    this: new (
      viewer: Viewer,
      src: Event | ID,
    ) => T,
    viewer: Viewer,
    src: Event | ID,
  ): T {
    return new this(viewer, src);
  }

  async sourceEnt(id: ID) {
    return Event.load(this.viewer, id);
  }
}

export class EventToGuestsQueryBase extends CustomEdgeQueryBase<
  Event,
  Guest,
  Viewer
> {
  constructor(viewer: Viewer, src: Event | ID, sortColumn?: string) {
    super(viewer, {
      src: src,
      groupCol: "event_id",
      loadEntOptions: Guest.loaderOptions(),
      name: "EventToGuestsQuery",
      sortColumn,
    });
  }

  static query<T extends EventToGuestsQueryBase>(
    this: new (
      viewer: Viewer,
      src: Event | ID,
    ) => T,
    viewer: Viewer,
    src: Event | ID,
  ): T {
    return new this(viewer, src);
  }

  async sourceEnt(id: ID) {
    return Event.load(this.viewer, id);
  }
}
