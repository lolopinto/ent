// Generated by github.com/lolopinto/ent/ent, DO NOT EDIT.

import { Data, ID, Viewer } from "@snowtop/ent";

type Constructor<T = {}> = new (...args: any[]) => T;

export interface IWithAddress {
  // isWithAddress(): boolean;
  addressId: ID | null;
}

export function isWithAddress(obj: unknown): obj is IWithAddress{
  // if (typeof obj !== "object" || obj === null) {
  //   return false;
  // }
  const o = (obj as unknown as IWithAddress)
  return 'addressId' in o && typeof o.addressId === 'string' || typeof o.addressId === 'number' || o.addressId === null;
}

function extractFromArgs<TViewer extends Viewer, TData extends Data>(
  args: any[],
): { viewer: TViewer; data: TData } {
  if (args.length !== 2) {
    throw new Error("args should be length 2");
  }
  return {
    viewer: args[0],
    data: args[1],
  };
}

export function WithAddressMixin<T extends Constructor>(BaseClass: T) {
  return class WithAddressMixin extends BaseClass {
    readonly addressId: ID | null;
    constructor(...args: any[]) {
      super(...args);
      const { data } = extractFromArgs(args);
      this.addressId = data.address_id;
    }

    // isWithAddress() {
    //   return true;
    // }
  };
}
