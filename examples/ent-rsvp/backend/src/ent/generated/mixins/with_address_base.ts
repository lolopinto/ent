// Generated by github.com/lolopinto/ent/ent, DO NOT EDIT.

import { Data, Ent, ID, Viewer } from "@snowtop/ent";
import { Address } from "src/ent/internal";

export interface IWithAddressBase<TViewer extends Viewer = Viewer>
  extends Ent<TViewer> {
  addressId: ID | null;
  loadAddress(): Promise<Address | null>;
}

type Constructor<T extends IWithAddressBase = IWithAddressBase> = new (
  ...args: any[]
) => T;

function extractFromArgs<TViewer extends Viewer, TData extends Data>(
  args: any[],
): { viewer: TViewer; data: TData } {
  if (args.length !== 2) {
    throw new Error("args should be length 2");
  }
  return {
    viewer: args[0],
    data: args[1],
  };
}

export function WithAddressBaseMixin<T extends Constructor>(BaseClass: T) {
  return class WithAddressBaseMixin extends BaseClass {
    readonly addressId: ID | null;
    constructor(...args: any[]) {
      super(...args);
      const { data } = extractFromArgs(args);
      this.addressId = data.address_id;
    }
  };
}
