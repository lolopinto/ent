// Generated by github.com/lolopinto/ent/ent, DO NOT EDIT.

import {
  AllowIfViewerHasIdentityPrivacyPolicy,
  ID,
  PrivacyPolicy,
  Viewer,
} from "@snowtop/ent";
import {
  Action,
  Builder,
  Changeset,
  WriteOperation,
} from "@snowtop/ent/action";
import { Event, GuestGroup } from "src/ent/";
import {
  GuestGroupBuilder,
  GuestGroupInput,
} from "src/ent/guest_group/actions/generated/guest_group_builder";

interface customGuestInput {
  name: string;
  emailAddress?: string | null;
  title?: string | null;
}

export interface GuestGroupCreateInput {
  invitationName: string;
  eventID: ID | Builder<Event>;
  guests?: customGuestInput[] | null;
}

export class CreateGuestGroupActionBase implements Action<GuestGroup> {
  public readonly builder: GuestGroupBuilder;
  public readonly viewer: Viewer;
  protected input: GuestGroupCreateInput;

  constructor(viewer: Viewer, input: GuestGroupCreateInput) {
    this.viewer = viewer;
    this.input = input;
    this.builder = new GuestGroupBuilder(
      this.viewer,
      WriteOperation.Insert,
      this,
    );
  }

  getPrivacyPolicy(): PrivacyPolicy {
    return AllowIfViewerHasIdentityPrivacyPolicy;
  }

  getInput(): GuestGroupInput {
    return this.input;
  }

  async changeset(): Promise<Changeset<GuestGroup>> {
    return this.builder.build();
  }

  async valid(): Promise<boolean> {
    return this.builder.valid();
  }

  async validX(): Promise<void> {
    await this.builder.validX();
  }

  async save(): Promise<GuestGroup | null> {
    await this.builder.save();
    return this.builder.editedEnt();
  }

  async saveX(): Promise<GuestGroup> {
    await this.builder.saveX();
    return this.builder.editedEntX();
  }

  static create<T extends CreateGuestGroupActionBase>(
    this: new (viewer: Viewer, input: GuestGroupCreateInput) => T,
    viewer: Viewer,
    input: GuestGroupCreateInput,
  ): T {
    return new this(viewer, input);
  }
}
