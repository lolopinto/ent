// Generated by github.com/lolopinto/ent/ent, DO NOT EDIT.

import {
  EdgeType,
  EventActivity,
  Guest,
  GuestGroup,
  GuestToAttendingEventsQuery,
  GuestToDeclinedEventsQuery,
  GuestGroupToInvitedEventsQuery,
} from "src/ent/internal";
import { Viewer, EdgeQuerySource, BaseEdgeQuery } from "@lolopinto/ent";

export class EventActivityToAttendingQueryBase extends BaseEdgeQuery<
  EventActivity,
  Guest
> {
  constructor(viewer: Viewer, src: EdgeQuerySource<EventActivity>) {
    super(
      viewer,
      src,
      EdgeType.EventActivityToAttending,
      Guest.loaderOptions(),
    );
  }

  static query<T extends EventActivityToAttendingQueryBase>(
    this: new (viewer: Viewer, src: EdgeQuerySource<EventActivity>) => T,
    viewer: Viewer,
    src: EdgeQuerySource<EventActivity>,
  ): T {
    return new this(viewer, src);
  }

  queryGuestToAttendingEvents(): GuestToAttendingEventsQuery {
    return GuestToAttendingEventsQuery.query(this.viewer, this);
  }

  queryGuestToDeclinedEvents(): GuestToDeclinedEventsQuery {
    return GuestToDeclinedEventsQuery.query(this.viewer, this);
  }
}

export class EventActivityToDeclinedQueryBase extends BaseEdgeQuery<
  EventActivity,
  Guest
> {
  constructor(viewer: Viewer, src: EdgeQuerySource<EventActivity>) {
    super(viewer, src, EdgeType.EventActivityToDeclined, Guest.loaderOptions());
  }

  static query<T extends EventActivityToDeclinedQueryBase>(
    this: new (viewer: Viewer, src: EdgeQuerySource<EventActivity>) => T,
    viewer: Viewer,
    src: EdgeQuerySource<EventActivity>,
  ): T {
    return new this(viewer, src);
  }

  queryGuestToAttendingEvents(): GuestToAttendingEventsQuery {
    return GuestToAttendingEventsQuery.query(this.viewer, this);
  }

  queryGuestToDeclinedEvents(): GuestToDeclinedEventsQuery {
    return GuestToDeclinedEventsQuery.query(this.viewer, this);
  }
}

export class EventActivityToInvitesQueryBase extends BaseEdgeQuery<
  EventActivity,
  GuestGroup
> {
  constructor(viewer: Viewer, src: EdgeQuerySource<EventActivity>) {
    super(
      viewer,
      src,
      EdgeType.EventActivityToInvites,
      GuestGroup.loaderOptions(),
    );
  }

  static query<T extends EventActivityToInvitesQueryBase>(
    this: new (viewer: Viewer, src: EdgeQuerySource<EventActivity>) => T,
    viewer: Viewer,
    src: EdgeQuerySource<EventActivity>,
  ): T {
    return new this(viewer, src);
  }

  queryGuestGroupToInvitedEvents(): GuestGroupToInvitedEventsQuery {
    return GuestGroupToInvitedEventsQuery.query(this.viewer, this);
  }
}
