/**
 * Copyright whaa whaa
 * Generated by github.com/lolopinto/ent/ent, DO NOT EDIT.
 */

import {
  AllowIfViewerHasIdentityPrivacyPolicy,
  ID,
  PrivacyPolicy,
} from "@snowtop/ent";
import {
  Action,
  Builder,
  Changeset,
  Observer,
  Trigger,
  Validator,
  WriteOperation,
} from "@snowtop/ent/action";
import { Contact, ContactPhoneNumber } from "../../..";
import { ContactPhoneNumberBuilder } from "./contact_phone_number_builder";
import { ContactInfo, ContactLabel } from "../../types";
import { ExampleViewer as ExampleViewerAlias } from "../../../../viewer/viewer";

export interface ContactPhoneNumberCreateInput {
  extra?: ContactInfo | null;
  phoneNumber: string;
  label: ContactLabel;
  contactID: ID | Builder<Contact, ExampleViewerAlias>;
}

export type CreateContactPhoneNumberActionTriggers = (
  | Trigger<
      ContactPhoneNumber,
      ContactPhoneNumberBuilder<
        ContactPhoneNumberCreateInput,
        ContactPhoneNumber | null
      >,
      ExampleViewerAlias,
      ContactPhoneNumberCreateInput,
      ContactPhoneNumber | null
    >
  | Trigger<
      ContactPhoneNumber,
      ContactPhoneNumberBuilder<
        ContactPhoneNumberCreateInput,
        ContactPhoneNumber | null
      >,
      ExampleViewerAlias,
      ContactPhoneNumberCreateInput,
      ContactPhoneNumber | null
    >[]
)[];

export type CreateContactPhoneNumberActionObservers = Observer<
  ContactPhoneNumber,
  ContactPhoneNumberBuilder<
    ContactPhoneNumberCreateInput,
    ContactPhoneNumber | null
  >,
  ExampleViewerAlias,
  ContactPhoneNumberCreateInput,
  ContactPhoneNumber | null
>[];

export type CreateContactPhoneNumberActionValidators = Validator<
  ContactPhoneNumber,
  ContactPhoneNumberBuilder<
    ContactPhoneNumberCreateInput,
    ContactPhoneNumber | null
  >,
  ExampleViewerAlias,
  ContactPhoneNumberCreateInput,
  ContactPhoneNumber | null
>[];

export class CreateContactPhoneNumberActionBase
  implements
    Action<
      ContactPhoneNumber,
      ContactPhoneNumberBuilder<
        ContactPhoneNumberCreateInput,
        ContactPhoneNumber | null
      >,
      ExampleViewerAlias,
      ContactPhoneNumberCreateInput,
      ContactPhoneNumber | null
    >
{
  public readonly builder: ContactPhoneNumberBuilder<
    ContactPhoneNumberCreateInput,
    ContactPhoneNumber | null
  >;
  public readonly viewer: ExampleViewerAlias;
  protected input: ContactPhoneNumberCreateInput;

  constructor(
    viewer: ExampleViewerAlias,
    input: ContactPhoneNumberCreateInput,
  ) {
    this.viewer = viewer;
    this.input = input;
    this.builder = new ContactPhoneNumberBuilder(
      this.viewer,
      WriteOperation.Insert,
      this,
      null,
    );
  }

  getPrivacyPolicy(): PrivacyPolicy<ContactPhoneNumber, ExampleViewerAlias> {
    return AllowIfViewerHasIdentityPrivacyPolicy;
  }

  getTriggers(): CreateContactPhoneNumberActionTriggers {
    return [];
  }

  getObservers(): CreateContactPhoneNumberActionObservers {
    return [];
  }

  getValidators(): CreateContactPhoneNumberActionValidators {
    return [];
  }

  getInput(): ContactPhoneNumberCreateInput {
    return this.input;
  }

  async changeset(): Promise<Changeset> {
    return this.builder.build();
  }

  async valid(): Promise<boolean> {
    return this.builder.valid();
  }

  async validX(): Promise<void> {
    await this.builder.validX();
  }

  async save(): Promise<ContactPhoneNumber | null> {
    await this.builder.save();
    return this.builder.editedEnt();
  }

  async saveX(): Promise<ContactPhoneNumber> {
    await this.builder.saveX();
    return this.builder.editedEntX();
  }

  static create<T extends CreateContactPhoneNumberActionBase>(
    this: new (
      viewer: ExampleViewerAlias,
      input: ContactPhoneNumberCreateInput,
    ) => T,
    viewer: ExampleViewerAlias,
    input: ContactPhoneNumberCreateInput,
  ): T {
    return new this(viewer, input);
  }
}
