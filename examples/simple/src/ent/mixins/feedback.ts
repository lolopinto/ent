/**
 * Copyright whaa whaa
 * Generated by github.com/lolopinto/ent/ent, DO NOT EDIT.
 */

import {
  FeedbackBaseMixin,
  IFeedbackBase,
} from "../generated/mixins/feedback_base";
import { ExampleViewer as ExampleViewerAlias } from "../../viewer/viewer";

export interface IFeedback<
  TViewer extends ExampleViewerAlias = ExampleViewerAlias,
> extends IFeedbackBase<TViewer> {
  isFeedback(): boolean;
}

type Constructor<T extends IFeedback = IFeedback> = new (...args: any[]) => T;

export function isFeedback(ent: unknown): ent is IFeedback {
  const o = ent as IFeedback;
  return (o.isFeedback && o.isFeedback()) ?? false;
}

export function FeedbackMixin<T extends Constructor>(BaseClass: T) {
  return class FeedbackMixin
    extends FeedbackBaseMixin(BaseClass)
    implements IFeedback
  {
    // add custom fields implementation

    isFeedback() {
      return true;
    }

    async hasLikers(): Promise<boolean> {
      const ct = await this.queryLikers().queryCount();
      return ct > 0;
    }
  };
}
