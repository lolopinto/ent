/**
 * Copyright whaa whaa
 * Generated by github.com/lolopinto/ent/ent, DO NOT EDIT.
 */

import {
  GraphQLBoolean,
  GraphQLFieldConfigMap,
  GraphQLFloat,
  GraphQLID,
  GraphQLInt,
  GraphQLList,
  GraphQLNonNull,
  GraphQLObjectType,
  GraphQLString,
} from "graphql";
import { RequestContext } from "@snowtop/ent";
import {
  UserNestedNestedObject,
  UserNestedObject,
  UserSuperNestedObject,
} from "../../../ent";
import { EnumType, NestedEnumType, NestedNestedEnumType } from "../internal";

const UserNestedObjectType = new GraphQLObjectType({
  name: "UserNestedObject",
  fields: (): GraphQLFieldConfigMap<UserNestedObject, RequestContext> => ({
    nestedUuid: {
      type: GraphQLNonNull(GraphQLID),
    },
    nestedInt: {
      type: GraphQLNonNull(GraphQLInt),
    },
    nestedString: {
      type: GraphQLNonNull(GraphQLString),
    },
    nestedBool: {
      type: GraphQLNonNull(GraphQLBoolean),
    },
    nestedFloat: {
      type: GraphQLNonNull(GraphQLFloat),
    },
    nestedEnum: {
      type: GraphQLNonNull(NestedEnumType),
    },
    nestedStringList: {
      type: GraphQLNonNull(GraphQLList(GraphQLNonNull(GraphQLString))),
    },
    nestedIntList: {
      type: GraphQLNonNull(GraphQLList(GraphQLNonNull(GraphQLInt))),
    },
    nestedObj: {
      type: UserNestedNestedObjectType,
    },
  }),
});

const UserNestedNestedObjectType = new GraphQLObjectType({
  name: "UserNestedNestedObject",
  fields: (): GraphQLFieldConfigMap<
    UserNestedNestedObject,
    RequestContext
  > => ({
    nestedNestedUuid: {
      type: GraphQLNonNull(GraphQLID),
    },
    nestedNestedInt: {
      type: GraphQLNonNull(GraphQLInt),
    },
    nestedNestedString: {
      type: GraphQLNonNull(GraphQLString),
    },
    nestedNestedBool: {
      type: GraphQLNonNull(GraphQLBoolean),
    },
    nestedNestedFloat: {
      type: GraphQLNonNull(GraphQLFloat),
    },
    nestedNestedEnum: {
      type: GraphQLNonNull(NestedNestedEnumType),
    },
    nestedNestedStringList: {
      type: GraphQLNonNull(GraphQLList(GraphQLNonNull(GraphQLString))),
    },
    nestedNestedIntList: {
      type: GraphQLNonNull(GraphQLList(GraphQLNonNull(GraphQLInt))),
    },
  }),
});

export const UserSuperNestedObjectType = new GraphQLObjectType({
  name: "UserSuperNestedObject",
  fields: (): GraphQLFieldConfigMap<UserSuperNestedObject, RequestContext> => ({
    uuid: {
      type: GraphQLNonNull(GraphQLID),
    },
    int: {
      type: GraphQLNonNull(GraphQLInt),
    },
    string: {
      type: GraphQLNonNull(GraphQLString),
    },
    bool: {
      type: GraphQLNonNull(GraphQLBoolean),
    },
    float: {
      type: GraphQLNonNull(GraphQLFloat),
    },
    enum: {
      type: GraphQLNonNull(EnumType),
    },
    stringList: {
      type: GraphQLNonNull(GraphQLList(GraphQLNonNull(GraphQLString))),
    },
    intList: {
      type: GraphQLNonNull(GraphQLList(GraphQLNonNull(GraphQLInt))),
    },
    obj: {
      type: UserNestedObjectType,
    },
  }),
});
