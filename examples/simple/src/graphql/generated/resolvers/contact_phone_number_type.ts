/**
 * Copyright whaa whaa
 * Generated by github.com/lolopinto/ent/ent, DO NOT EDIT.
 */

import {
  GraphQLFieldConfigMap,
  GraphQLID,
  GraphQLInt,
  GraphQLNonNull,
  GraphQLObjectType,
  GraphQLString,
} from "graphql";
import { RequestContext } from "@snowtop/ent";
import {
  GraphQLEdgeConnection,
  GraphQLNodeInterface,
  nodeIDEncoder,
} from "@snowtop/ent/graphql";
import {
  ContactPhoneNumber,
  ContactPhoneNumberToCommentsQuery,
  ContactPhoneNumberToLikersQuery,
} from "../../../ent";
import {
  ContactInfoType,
  ContactItemType,
  ContactLabelType,
  ContactPhoneNumberToCommentsConnectionType,
  ContactPhoneNumberToLikersConnectionType,
  ContactType,
  UserType,
} from "../../resolvers/internal";
import { ExampleViewer as ExampleViewerAlias } from "../../../viewer/viewer";

export const ContactPhoneNumberType = new GraphQLObjectType({
  name: "ContactPhoneNumber",
  fields: (): GraphQLFieldConfigMap<
    ContactPhoneNumber,
    RequestContext<ExampleViewerAlias>
  > => ({
    contact: {
      type: ContactType,
      resolve: (
        obj: ContactPhoneNumber,
        args: {},
        context: RequestContext<ExampleViewerAlias>,
      ) => {
        return obj.loadContact();
      },
    },
    owner: {
      type: UserType,
      resolve: (
        obj: ContactPhoneNumber,
        args: {},
        context: RequestContext<ExampleViewerAlias>,
      ) => {
        return obj.loadOwner();
      },
    },
    id: {
      type: new GraphQLNonNull(GraphQLID),
      resolve: nodeIDEncoder,
    },
    extra: {
      type: ContactInfoType,
    },
    phoneNumber: {
      type: new GraphQLNonNull(GraphQLString),
    },
    label: {
      type: new GraphQLNonNull(ContactLabelType),
    },
    comments: {
      type: new GraphQLNonNull(ContactPhoneNumberToCommentsConnectionType()),
      args: {
        first: {
          description: "",
          type: GraphQLInt,
        },
        after: {
          description: "",
          type: GraphQLString,
        },
        last: {
          description: "",
          type: GraphQLInt,
        },
        before: {
          description: "",
          type: GraphQLString,
        },
      },
      resolve: (
        obj: ContactPhoneNumber,
        args: any,
        context: RequestContext<ExampleViewerAlias>,
      ) => {
        return new GraphQLEdgeConnection(
          obj.viewer,
          obj,
          (v, obj: ContactPhoneNumber) =>
            ContactPhoneNumberToCommentsQuery.query(v, obj),
          args,
        );
      },
    },
    likers: {
      type: new GraphQLNonNull(ContactPhoneNumberToLikersConnectionType()),
      args: {
        first: {
          description: "",
          type: GraphQLInt,
        },
        after: {
          description: "",
          type: GraphQLString,
        },
        last: {
          description: "",
          type: GraphQLInt,
        },
        before: {
          description: "",
          type: GraphQLString,
        },
      },
      resolve: (
        obj: ContactPhoneNumber,
        args: any,
        context: RequestContext<ExampleViewerAlias>,
      ) => {
        return new GraphQLEdgeConnection(
          obj.viewer,
          obj,
          (v, obj: ContactPhoneNumber) =>
            ContactPhoneNumberToLikersQuery.query(v, obj),
          args,
        );
      },
    },
  }),
  interfaces: () => [GraphQLNodeInterface, ContactItemType],
  isTypeOf(obj) {
    return obj instanceof ContactPhoneNumber;
  },
});
