/**
 * Copyright whaa whaa
 * Generated by github.com/lolopinto/ent/ent, DO NOT EDIT.
 */

import {
  GraphQLBoolean,
  GraphQLFieldConfig,
  GraphQLFieldConfigMap,
  GraphQLID,
  GraphQLInputFieldConfigMap,
  GraphQLInputObjectType,
  GraphQLNonNull,
  GraphQLObjectType,
  GraphQLResolveInfo,
} from "graphql";
import { RequestContext } from "@snowtop/ent";
import { mustDecodeIDFromGQLID } from "@snowtop/ent/graphql";
import DeleteUserAction2, {
  DeleteUserInput2,
} from "../../../../ent/user/actions/delete_user_action_2";
import { ExampleViewer as ExampleViewerAlias } from "../../../../viewer/viewer";

interface customDeleteUserInput2 extends DeleteUserInput2 {
  id: string;
}

interface DeleteUserInput2Payload {
  deletedUserID: string;
}

export const DeleteUserInput2Type = new GraphQLInputObjectType({
  name: "DeleteUserInput2",
  fields: (): GraphQLInputFieldConfigMap => ({
    id: {
      description: "id of User",
      type: new GraphQLNonNull(GraphQLID),
    },
    log: {
      type: new GraphQLNonNull(GraphQLBoolean),
    },
  }),
});

export const DeleteUserInput2PayloadType = new GraphQLObjectType({
  name: "DeleteUserInput2Payload",
  fields: (): GraphQLFieldConfigMap<
    DeleteUserInput2Payload,
    RequestContext<ExampleViewerAlias>
  > => ({
    deletedUserID: {
      type: GraphQLID,
    },
  }),
});

export const UserDelete2Type: GraphQLFieldConfig<
  undefined,
  RequestContext<ExampleViewerAlias>,
  { [input: string]: customDeleteUserInput2 }
> = {
  type: new GraphQLNonNull(DeleteUserInput2PayloadType),
  args: {
    input: {
      description: "",
      type: new GraphQLNonNull(DeleteUserInput2Type),
    },
  },
  resolve: async (
    _source,
    { input },
    context: RequestContext<ExampleViewerAlias>,
    _info: GraphQLResolveInfo,
  ): Promise<DeleteUserInput2Payload> => {
    await DeleteUserAction2.saveXFromID(
      context.getViewer(),
      mustDecodeIDFromGQLID(input.id),
      {
        log: input.log,
      },
    );
    return { deletedUserID: input.id };
  },
};
