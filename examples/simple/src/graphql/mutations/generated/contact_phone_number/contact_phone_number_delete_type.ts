/**
 * Copyright whaa whaa
 * Generated by github.com/lolopinto/ent/ent, DO NOT EDIT.
 */

import {
  GraphQLFieldConfig,
  GraphQLFieldConfigMap,
  GraphQLID,
  GraphQLInputFieldConfigMap,
  GraphQLInputObjectType,
  GraphQLNonNull,
  GraphQLObjectType,
  GraphQLResolveInfo,
} from "graphql";
import { RequestContext } from "@snowtop/ent";
import { mustDecodeIDFromGQLID } from "@snowtop/ent/graphql";
import DeleteContactPhoneNumberAction from "../../../../ent/contact_phone_number/actions/delete_contact_phone_number_action";

interface customContactPhoneNumberDeleteInput {
  contactPhoneNumberID: string;
}

interface ContactPhoneNumberDeletePayload {
  deletedContactPhoneNumberID: string;
}

export const ContactPhoneNumberDeleteInputType = new GraphQLInputObjectType({
  name: "ContactPhoneNumberDeleteInput",
  fields: (): GraphQLInputFieldConfigMap => ({
    contactPhoneNumberID: {
      description: "id of ContactPhoneNumber",
      type: GraphQLNonNull(GraphQLID),
    },
  }),
});

export const ContactPhoneNumberDeletePayloadType = new GraphQLObjectType({
  name: "ContactPhoneNumberDeletePayload",
  fields: (): GraphQLFieldConfigMap<
    ContactPhoneNumberDeletePayload,
    RequestContext
  > => ({
    deletedContactPhoneNumberID: {
      type: GraphQLID,
    },
  }),
});

export const ContactPhoneNumberDeleteType: GraphQLFieldConfig<
  undefined,
  RequestContext,
  { [input: string]: customContactPhoneNumberDeleteInput }
> = {
  type: GraphQLNonNull(ContactPhoneNumberDeletePayloadType),
  args: {
    input: {
      description: "",
      type: GraphQLNonNull(ContactPhoneNumberDeleteInputType),
    },
  },
  resolve: async (
    _source,
    { input },
    context: RequestContext,
    _info: GraphQLResolveInfo,
  ): Promise<ContactPhoneNumberDeletePayload> => {
    await DeleteContactPhoneNumberAction.saveXFromID(
      context.getViewer(),
      mustDecodeIDFromGQLID(input.contactPhoneNumberID),
    );
    return { deletedContactPhoneNumberID: input.contactPhoneNumberID };
  },
};
