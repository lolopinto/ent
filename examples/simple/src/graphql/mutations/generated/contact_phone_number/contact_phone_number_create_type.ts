/**
 * Copyright whaa whaa
 * Generated by github.com/lolopinto/ent/ent, DO NOT EDIT.
 */

import {
  GraphQLFieldConfig,
  GraphQLFieldConfigMap,
  GraphQLID,
  GraphQLInputFieldConfigMap,
  GraphQLInputObjectType,
  GraphQLNonNull,
  GraphQLObjectType,
  GraphQLResolveInfo,
  GraphQLString,
} from "graphql";
import { RequestContext } from "@snowtop/ent";
import { mustDecodeIDFromGQLID } from "@snowtop/ent/graphql";
import { ContactPhoneNumber } from "../../../../ent";
import CreateContactPhoneNumberAction, {
  ContactPhoneNumberCreateInput,
} from "../../../../ent/contact_phone_number/actions/create_contact_phone_number_action";
import { ContactPhoneNumberType } from "../../../resolvers";

interface customContactPhoneNumberCreateInput
  extends ContactPhoneNumberCreateInput {
  contactID: string;
}

interface ContactPhoneNumberCreatePayload {
  contactPhoneNumber: ContactPhoneNumber;
}

export const ContactPhoneNumberCreateInputType = new GraphQLInputObjectType({
  name: "ContactPhoneNumberCreateInput",
  fields: (): GraphQLInputFieldConfigMap => ({
    phoneNumber: {
      type: GraphQLNonNull(GraphQLString),
    },
    label: {
      type: GraphQLNonNull(GraphQLString),
    },
    contactID: {
      type: GraphQLNonNull(GraphQLID),
    },
  }),
});

export const ContactPhoneNumberCreatePayloadType = new GraphQLObjectType({
  name: "ContactPhoneNumberCreatePayload",
  fields: (): GraphQLFieldConfigMap<
    ContactPhoneNumberCreatePayload,
    RequestContext
  > => ({
    contactPhoneNumber: {
      type: GraphQLNonNull(ContactPhoneNumberType),
    },
  }),
});

export const ContactPhoneNumberCreateType: GraphQLFieldConfig<
  undefined,
  RequestContext,
  { [input: string]: customContactPhoneNumberCreateInput }
> = {
  type: GraphQLNonNull(ContactPhoneNumberCreatePayloadType),
  args: {
    input: {
      description: "",
      type: GraphQLNonNull(ContactPhoneNumberCreateInputType),
    },
  },
  resolve: async (
    _source,
    { input },
    context: RequestContext,
    _info: GraphQLResolveInfo,
  ): Promise<ContactPhoneNumberCreatePayload> => {
    const contactPhoneNumber = await CreateContactPhoneNumberAction.create(
      context.getViewer(),
      {
        phoneNumber: input.phoneNumber,
        label: input.label,
        contactID: mustDecodeIDFromGQLID(input.contactID),
      },
    ).saveX();
    return { contactPhoneNumber: contactPhoneNumber };
  },
};
