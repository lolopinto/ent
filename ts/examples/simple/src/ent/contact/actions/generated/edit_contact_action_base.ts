// Generated by github.com/lolopinto/ent/ent, DO NOT EDIT.

import {
  Action,
  saveBuilder,
  saveBuilderX,
  WriteOperation,
  Changeset,
} from "ent/action";
import { Viewer } from "ent/ent";
import Contact from "src/ent/contact";
import {
  ContactBuilder,
  ContactInput,
} from "src/ent/contact/actions/contact_builder";

export interface ContactEditInput {
  emailAddress?: string;
  firstName?: string;
  lastName?: string;
  userID?: string;
}

export class EditContactActionBase implements Action<Contact> {
  public readonly builder: ContactBuilder;
  public readonly viewer: Viewer;
  private input: ContactEditInput;

  constructor(viewer: Viewer, contact: Contact, input: ContactEditInput) {
    this.viewer = viewer;
    this.input = input;
    this.builder = new ContactBuilder(
      this.viewer,
      WriteOperation.Edit,
      this,
      contact,
    );
  }

  getFields(): ContactInput {
    return {
      ...this.input,
      requiredFields: [],
    };
  }

  async changeset(): Promise<Changeset<Contact>> {
    return this.builder.build();
  }

  async save(): Promise<Contact | null> {
    return await saveBuilder(this.builder);
  }

  async saveX(): Promise<Contact> {
    return await saveBuilderX(this.builder);
  }

  static create<T extends EditContactActionBase>(
    this: new (viewer: Viewer, contact: Contact, input: ContactEditInput) => T,
    viewer: Viewer,
    contact: Contact,
    input: ContactEditInput,
  ): EditContactActionBase {
    return new this(viewer, contact, input);
  }
}
