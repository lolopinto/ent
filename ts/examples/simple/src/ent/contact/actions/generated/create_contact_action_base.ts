// Generated by github.com/lolopinto/ent/ent, DO NOT EDIT.

import {
  Action,
  saveBuilder,
  saveBuilderX,
  WriteOperation,
  Changeset,
} from "ent/action";
import { Viewer } from "ent/ent";
import Contact from "src/ent/contact";
import {
  ContactBuilder,
  ContactInput,
} from "src/ent/contact/actions/contact_builder";

export interface ContactCreateInput {
  emailAddress: string;
  firstName: string;
  lastName: string;
  userID: string;
}

export class CreateContactActionBase implements Action<Contact> {
  public readonly builder: ContactBuilder;
  public readonly viewer: Viewer;
  private input: ContactCreateInput;

  constructor(viewer: Viewer, input: ContactCreateInput) {
    this.viewer = viewer;
    this.input = input;
    this.builder = new ContactBuilder(this.viewer, WriteOperation.Insert, this);
  }

  getFields(): ContactInput {
    return {
      ...this.input,
      requiredFields: ["emailAddress", "firstName", "lastName", "userID"],
    };
  }

  async changeset(): Promise<Changeset<Contact>> {
    return this.builder.build();
  }

  async save(): Promise<Contact | null> {
    return await saveBuilder(this.builder);
  }

  async saveX(): Promise<Contact> {
    return await saveBuilderX(this.builder);
  }

  static create<T extends CreateContactActionBase>(
    this: new (viewer: Viewer, input: ContactCreateInput) => T,
    viewer: Viewer,
    input: ContactCreateInput,
  ): CreateContactActionBase {
    return new this(viewer, input);
  }
}
