// Generated by github.com/lolopinto/ent/ent, DO NOT EDIT.

import {
  Action,
  saveBuilder,
  saveBuilderX,
  WriteOperation,
  Changeset,
} from "ent/action";
import { Viewer } from "ent/ent";
import Event from "src/ent/event";
import { EventBuilder, EventInput } from "src/ent/event/actions/event_builder";

export interface EventCreateInput {
  name: string;
  creatorID: string;
  startTime: Date;
  endTime?: Date | null;
  location: string;
}

export class CreateEventActionBase implements Action<Event> {
  public readonly builder: EventBuilder;

  constructor(public readonly viewer: Viewer, private input: EventCreateInput) {
    this.builder = new EventBuilder(this.viewer, WriteOperation.Insert, this);
  }

  getFields(): EventInput {
    return {
      ...this.input,
      requiredFields: ["name", "creatorID", "start_time", "location"],
    };
  }

  async changeset(): Promise<Changeset<Event>> {
    return this.builder.build();
  }

  async save(): Promise<Event | null> {
    return await saveBuilder(this.builder);
  }

  async saveX(): Promise<Event> {
    return await saveBuilderX(this.builder);
  }

  static create(
    viewer: Viewer,
    input: EventCreateInput,
  ): CreateEventActionBase {
    return new CreateEventActionBase(viewer, input);
  }
}
