// Generated by github.com/lolopinto/ent/ent, DO NOT EDIT.

import {
  GraphQLObjectType,
  GraphQLInputObjectType,
  GraphQLID,
  GraphQLNonNull,
  GraphQLFieldConfig,
  GraphQLFieldConfigMap,
  GraphQLResolveInfo,
  GraphQLInputFieldConfigMap,
} from "graphql";
import { Context } from "src/graphql/context";
import { EventDeleteInput } from "src/ent/event/actions/delete_event_action";
import Event from "src/ent/event";
import DeleteEventAction from "src/ent/event/actions/delete_event_action";

export const EventDeleteInputType = new GraphQLInputObjectType({
  name: "EventDeleteInput",
  fields: (): GraphQLInputFieldConfigMap => ({
    eventID: {
      type: GraphQLNonNull(GraphQLID),
    },
  }),
});
interface EventDeleteResponse {
  event: Event;
}

export const EventDeleteResponseType = new GraphQLObjectType({
  name: "EventDeleteResponse",
  fields: (): GraphQLFieldConfigMap<Event, Context> => ({
    deletedEventID: {
      type: GraphQLID,
    },
  }),
});

export const EventDeleteType: GraphQLFieldConfig<
  undefined,
  Context,
  EventDeleteInput
> = {
  type: GraphQLNonNull(EventDeleteResponseType),
  args: {
    input: {
      description: "input for action",
      type: GraphQLNonNull(EventDeleteInputType),
    },
  },
  resolve: async (
    _source,
    args: EventDeleteInput,
    context: Context,
    _info: GraphQLResolveInfo,
  ): Promise<EventDeleteResponse> => {},
};
