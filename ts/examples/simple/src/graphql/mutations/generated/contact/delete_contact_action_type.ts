// Generated by github.com/lolopinto/ent/ent, DO NOT EDIT.

import {
  GraphQLObjectType,
  GraphQLInputObjectType,
  GraphQLID,
  GraphQLNonNull,
  GraphQLFieldConfig,
  GraphQLFieldConfigMap,
  GraphQLResolveInfo,
  GraphQLInputFieldConfigMap,
} from "graphql";
import { Context } from "src/graphql/context";
import { ContactDeleteInput } from "src/ent/contact/actions/delete_contact_action";
import Contact from "src/ent/contact";
import DeleteContactAction from "src/ent/contact/actions/delete_contact_action";

export const ContactDeleteInputType = new GraphQLInputObjectType({
  name: "ContactDeleteInput",
  fields: (): GraphQLInputFieldConfigMap => ({
    contactID: {
      type: GraphQLNonNull(GraphQLID),
    },
  }),
});
interface ContactDeleteResponse {
  contact: Contact;
}

export const ContactDeleteResponseType = new GraphQLObjectType({
  name: "ContactDeleteResponse",
  fields: (): GraphQLFieldConfigMap<Contact, Context> => ({
    deletedContactID: {
      type: GraphQLID,
    },
  }),
});

export const ContactDeleteType: GraphQLFieldConfig<
  undefined,
  Context,
  ContactDeleteInput
> = {
  type: GraphQLNonNull(ContactDeleteResponseType),
  args: {
    input: {
      description: "input for action",
      type: GraphQLNonNull(ContactDeleteInputType),
    },
  },
  resolve: async (
    _source,
    args: ContactDeleteInput,
    context: Context,
    _info: GraphQLResolveInfo,
  ): Promise<ContactDeleteResponse> => {},
};
