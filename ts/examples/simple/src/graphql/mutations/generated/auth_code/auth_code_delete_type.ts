// Generated by github.com/lolopinto/ent/ent, DO NOT EDIT.

import {
  GraphQLObjectType,
  GraphQLInputObjectType,
  GraphQLID,
  GraphQLNonNull,
  GraphQLFieldConfig,
  GraphQLFieldConfigMap,
  GraphQLResolveInfo,
  GraphQLInputFieldConfigMap,
} from "graphql";
import { ID, RequestContext } from "@lolopinto/ent";
import { AuthCode } from "src/ent/";
import DeleteAuthCodeAction from "src/ent/auth_code/actions/delete_auth_code_action";

interface customAuthCodeDeleteInput {
  authCodeID: ID;
}

interface AuthCodeDeleteResponse {
  deletedAuthCodeID: ID;
}

export const AuthCodeDeleteInputType = new GraphQLInputObjectType({
  name: "AuthCodeDeleteInput",
  fields: (): GraphQLInputFieldConfigMap => ({
    authCodeID: {
      type: GraphQLNonNull(GraphQLID),
    },
  }),
});

export const AuthCodeDeleteResponseType = new GraphQLObjectType({
  name: "AuthCodeDeleteResponse",
  fields: (): GraphQLFieldConfigMap<
    AuthCodeDeleteResponse,
    RequestContext
  > => ({
    deletedAuthCodeID: {
      type: GraphQLID,
    },
  }),
});

export const AuthCodeDeleteType: GraphQLFieldConfig<
  undefined,
  RequestContext,
  { [input: string]: customAuthCodeDeleteInput }
> = {
  type: GraphQLNonNull(AuthCodeDeleteResponseType),
  args: {
    input: {
      description: "",
      type: GraphQLNonNull(AuthCodeDeleteInputType),
    },
  },
  resolve: async (
    _source,
    { input },
    context: RequestContext,
    _info: GraphQLResolveInfo,
  ): Promise<AuthCodeDeleteResponse> => {
    await DeleteAuthCodeAction.saveXFromID(
      context.getViewer(),
      input.authCodeID,
    );
    return { deletedAuthCodeID: input.authCodeID };
  },
};
