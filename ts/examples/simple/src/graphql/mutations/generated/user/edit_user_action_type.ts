// Generated by github.com/lolopinto/ent/ent, DO NOT EDIT.

import {
  GraphQLObjectType,
  GraphQLID,
  GraphQLString,
  GraphQLNonNull,
  GraphQLFieldConfig,
  GraphQLFieldConfigMap,
  GraphQLResolveInfo,
} from "graphql";
import { Context } from "src/graphql/context";
import { UserType } from "src/graphql/resolvers/generated/user_type.ts";
import User from "src/ent/user";

export const userEditInputType = new GraphQLObjectType({
  name: "userEditInput",
  fields: (): GraphQLFieldConfigMap<User, Context> => ({
    userID: {
      type: GraphQLNonNull(GraphQLID),
    },
    firstName: {
      type: GraphQLNonNull(GraphQLString),
    },
    lastName: {
      type: GraphQLNonNull(GraphQLString),
    },
  }),
});
interface userEditResponse {
  user: User;
}

export const userEditResponseType = new GraphQLObjectType({
  name: "userEditResponse",
  fields: (): GraphQLFieldConfigMap<User, Context> => ({
    user: {
      type: GraphQLNonNull(UserType),
    },
  }),
});

export const userEditType: GraphQLFieldConfig<
  undefined,
  Context,
  userEditInput
> = {
  type: GraphQLNonNull(userEditResponseType),
  args: {
    input: {
      description: "input for action",
      type: GraphQLNonNull(userEditInputType),
    },
  },
  resolve: async (
    _source,
    args: userEditInput,
    context: Context,
    _info: GraphQLResolveInfo,
  ) => {},
};
