// Generated by github.com/lolopinto/ent/ent, DO NOT EDIT.

import {
  GraphQLObjectType,
  GraphQLInputObjectType,
  GraphQLID,
  GraphQLNonNull,
  GraphQLFieldConfig,
  GraphQLFieldConfigMap,
  GraphQLResolveInfo,
  GraphQLInputFieldConfigMap,
} from "graphql";
import { ID } from "ent/ent";
import { Context } from "src/graphql/context";
import { UserDeleteInput } from "src/ent/user/actions/delete_user_action";
import User from "src/ent/user";
import DeleteUserAction from "src/ent/user/actions/delete_user_action";

interface customUserDeleteInput extends UserDeleteInput {
  userID: ID;
}

export const UserDeleteInputType = new GraphQLInputObjectType({
  name: "UserDeleteInput",
  fields: (): GraphQLInputFieldConfigMap => ({
    userID: {
      type: GraphQLNonNull(GraphQLID),
    },
  }),
});
interface UserDeleteResponse {
  user: User;
}

export const UserDeleteResponseType = new GraphQLObjectType({
  name: "UserDeleteResponse",
  fields: (): GraphQLFieldConfigMap<User, Context> => ({
    deletedUserID: {
      type: GraphQLID,
    },
  }),
});

export const UserDeleteType: GraphQLFieldConfig<
  undefined,
  Context,
  customUserDeleteInput
> = {
  type: GraphQLNonNull(UserDeleteResponseType),
  args: {
    input: {
      description: "",
      type: GraphQLNonNull(UserDeleteInputType),
    },
  },
  resolve: async (
    _source,
    args: customUserDeleteInput,
    context: Context,
    _info: GraphQLResolveInfo,
  ): Promise<UserDeleteResponse> => {},
};
