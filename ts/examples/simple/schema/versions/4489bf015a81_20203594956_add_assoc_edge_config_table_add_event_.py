# Code generated by github.com/lolopinto/ent/ent, DO NOT edit. 

"""add assoc_edge_config table
add event_hosts_edges table
add event_rsvps_edges table
add user_created_events_edges table
add user_friends_edges table
add edges EventToAttendingEdge, EventToDeclinedEdge, EventToHostsEdge, EventToInvitedEdge, EventToMaybeEdge, UserToCreatedEventsEdge, UserToDeclinedEventsEdge, UserToEventsAttendingEdge, UserToFriendsEdge, UserToInvitedEventsEdge, UserToMaybeEventsEdge

Revision ID: 4489bf015a81
Revises: 3c6b810ea389
Create Date: 2020-03-05 09:49:56.645382+00:00

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '4489bf015a81'
down_revision = '3c6b810ea389'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('assoc_edge_config',
    sa.Column('edge_type', postgresql.UUID(), nullable=False),
    sa.Column('edge_name', sa.Text(), nullable=False),
    sa.Column('symmetric_edge', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('inverse_edge_type', postgresql.UUID(), nullable=True),
    sa.Column('edge_table', sa.Text(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['inverse_edge_type'], ['assoc_edge_config.edge_type'], name='assoc_edge_config_inverse_edge_type_fkey', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('edge_type', name='assoc_edge_config_edge_type_pkey'),
    sa.UniqueConstraint('edge_name', name='assoc_edge_config_unique_edge_name')
    )
    op.create_table('event_hosts_edges',
    sa.Column('id1', postgresql.UUID(), nullable=False),
    sa.Column('id1_type', sa.Text(), nullable=False),
    sa.Column('edge_type', postgresql.UUID(), nullable=False),
    sa.Column('id2', postgresql.UUID(), nullable=False),
    sa.Column('id2_type', sa.Text(), nullable=False),
    sa.Column('time', sa.TIMESTAMP(), nullable=False),
    sa.Column('data', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id1', 'edge_type', 'id2', name='event_hosts_edges_id1_edge_type_id2_pkey')
    )
    op.create_table('event_rsvps_edges',
    sa.Column('id1', postgresql.UUID(), nullable=False),
    sa.Column('id1_type', sa.Text(), nullable=False),
    sa.Column('edge_type', postgresql.UUID(), nullable=False),
    sa.Column('id2', postgresql.UUID(), nullable=False),
    sa.Column('id2_type', sa.Text(), nullable=False),
    sa.Column('time', sa.TIMESTAMP(), nullable=False),
    sa.Column('data', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id1', 'edge_type', 'id2', name='event_rsvps_edges_id1_edge_type_id2_pkey')
    )
    op.create_table('user_created_events_edges',
    sa.Column('id1', postgresql.UUID(), nullable=False),
    sa.Column('id1_type', sa.Text(), nullable=False),
    sa.Column('edge_type', postgresql.UUID(), nullable=False),
    sa.Column('id2', postgresql.UUID(), nullable=False),
    sa.Column('id2_type', sa.Text(), nullable=False),
    sa.Column('time', sa.TIMESTAMP(), nullable=False),
    sa.Column('data', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id1', 'edge_type', 'id2', name='user_created_events_edges_id1_edge_type_id2_pkey')
    )
    op.create_table('user_friends_edges',
    sa.Column('id1', postgresql.UUID(), nullable=False),
    sa.Column('id1_type', sa.Text(), nullable=False),
    sa.Column('edge_type', postgresql.UUID(), nullable=False),
    sa.Column('id2', postgresql.UUID(), nullable=False),
    sa.Column('id2_type', sa.Text(), nullable=False),
    sa.Column('time', sa.TIMESTAMP(), nullable=False),
    sa.Column('data', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id1', 'edge_type', 'id2', name='user_friends_edges_id1_edge_type_id2_pkey')
    )
    op.add_edges(
      [
        {'edge_name': 'EventToAttendingEdge', 'edge_type': '6ebc0c47-ea29-4635-b991-95e44162174d', 'edge_table': 'event_rsvps_edges', 'symmetric_edge': False, 'inverse_edge_type': '2a98ba02-e342-4bb4-93f6-5d7ed02f5c48'},
        {'edge_name': 'EventToDeclinedEdge', 'edge_type': 'db8d2454-f7b2-4147-aae1-e666daf3f3c3', 'edge_table': 'event_rsvps_edges', 'symmetric_edge': False, 'inverse_edge_type': '1c7c173b-63ce-4002-b121-4a87f82047dd'},
        {'edge_name': 'EventToHostsEdge', 'edge_type': 'ebe3e709-845c-4723-ac9c-29f983f2b8ea', 'edge_table': 'event_hosts_edges', 'symmetric_edge': False, 'inverse_edge_type': None},
        {'edge_name': 'EventToInvitedEdge', 'edge_type': 'a72f5f64-3580-44fd-9bd0-d1335b803a46', 'edge_table': 'event_rsvps_edges', 'symmetric_edge': False, 'inverse_edge_type': 'e439f2b2-d93a-4d1a-83f0-865bda5c8337'},
        {'edge_name': 'EventToMaybeEdge', 'edge_type': 'b0f6311b-fdab-4c26-b6bf-b751e0997735', 'edge_table': 'event_rsvps_edges', 'symmetric_edge': False, 'inverse_edge_type': '8d5b1dee-ce65-452e-9f8d-78eca1993800'},
        {'edge_name': 'UserToCreatedEventsEdge', 'edge_type': 'daa3b2a3-8245-40ca-ae77-25bfb82578a7', 'edge_table': 'user_created_events_edges', 'symmetric_edge': False, 'inverse_edge_type': None},
        {'edge_name': 'UserToDeclinedEventsEdge', 'edge_type': '1c7c173b-63ce-4002-b121-4a87f82047dd', 'edge_table': 'event_rsvps_edges', 'symmetric_edge': False, 'inverse_edge_type': 'db8d2454-f7b2-4147-aae1-e666daf3f3c3'},
        {'edge_name': 'UserToEventsAttendingEdge', 'edge_type': '2a98ba02-e342-4bb4-93f6-5d7ed02f5c48', 'edge_table': 'event_rsvps_edges', 'symmetric_edge': False, 'inverse_edge_type': '6ebc0c47-ea29-4635-b991-95e44162174d'},
        {'edge_name': 'UserToFriendsEdge', 'edge_type': 'd1a9316d-090f-4b02-b393-fd9372e2c905', 'edge_table': 'user_friends_edges', 'symmetric_edge': True, 'inverse_edge_type': None},
        {'edge_name': 'UserToInvitedEventsEdge', 'edge_type': 'e439f2b2-d93a-4d1a-83f0-865bda5c8337', 'edge_table': 'event_rsvps_edges', 'symmetric_edge': False, 'inverse_edge_type': 'a72f5f64-3580-44fd-9bd0-d1335b803a46'},
        {'edge_name': 'UserToMaybeEventsEdge', 'edge_type': '8d5b1dee-ce65-452e-9f8d-78eca1993800', 'edge_table': 'event_rsvps_edges', 'symmetric_edge': False, 'inverse_edge_type': 'b0f6311b-fdab-4c26-b6bf-b751e0997735'},
      ]
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.remove_edges(
      [
        {'edge_name': 'EventToAttendingEdge', 'edge_type': '6ebc0c47-ea29-4635-b991-95e44162174d', 'edge_table': 'event_rsvps_edges', 'symmetric_edge': False, 'inverse_edge_type': '2a98ba02-e342-4bb4-93f6-5d7ed02f5c48'},
        {'edge_name': 'EventToDeclinedEdge', 'edge_type': 'db8d2454-f7b2-4147-aae1-e666daf3f3c3', 'edge_table': 'event_rsvps_edges', 'symmetric_edge': False, 'inverse_edge_type': '1c7c173b-63ce-4002-b121-4a87f82047dd'},
        {'edge_name': 'EventToHostsEdge', 'edge_type': 'ebe3e709-845c-4723-ac9c-29f983f2b8ea', 'edge_table': 'event_hosts_edges', 'symmetric_edge': False, 'inverse_edge_type': None},
        {'edge_name': 'EventToInvitedEdge', 'edge_type': 'a72f5f64-3580-44fd-9bd0-d1335b803a46', 'edge_table': 'event_rsvps_edges', 'symmetric_edge': False, 'inverse_edge_type': 'e439f2b2-d93a-4d1a-83f0-865bda5c8337'},
        {'edge_name': 'EventToMaybeEdge', 'edge_type': 'b0f6311b-fdab-4c26-b6bf-b751e0997735', 'edge_table': 'event_rsvps_edges', 'symmetric_edge': False, 'inverse_edge_type': '8d5b1dee-ce65-452e-9f8d-78eca1993800'},
        {'edge_name': 'UserToCreatedEventsEdge', 'edge_type': 'daa3b2a3-8245-40ca-ae77-25bfb82578a7', 'edge_table': 'user_created_events_edges', 'symmetric_edge': False, 'inverse_edge_type': None},
        {'edge_name': 'UserToDeclinedEventsEdge', 'edge_type': '1c7c173b-63ce-4002-b121-4a87f82047dd', 'edge_table': 'event_rsvps_edges', 'symmetric_edge': False, 'inverse_edge_type': 'db8d2454-f7b2-4147-aae1-e666daf3f3c3'},
        {'edge_name': 'UserToEventsAttendingEdge', 'edge_type': '2a98ba02-e342-4bb4-93f6-5d7ed02f5c48', 'edge_table': 'event_rsvps_edges', 'symmetric_edge': False, 'inverse_edge_type': '6ebc0c47-ea29-4635-b991-95e44162174d'},
        {'edge_name': 'UserToFriendsEdge', 'edge_type': 'd1a9316d-090f-4b02-b393-fd9372e2c905', 'edge_table': 'user_friends_edges', 'symmetric_edge': True, 'inverse_edge_type': None},
        {'edge_name': 'UserToInvitedEventsEdge', 'edge_type': 'e439f2b2-d93a-4d1a-83f0-865bda5c8337', 'edge_table': 'event_rsvps_edges', 'symmetric_edge': False, 'inverse_edge_type': 'a72f5f64-3580-44fd-9bd0-d1335b803a46'},
        {'edge_name': 'UserToMaybeEventsEdge', 'edge_type': '8d5b1dee-ce65-452e-9f8d-78eca1993800', 'edge_table': 'event_rsvps_edges', 'symmetric_edge': False, 'inverse_edge_type': 'b0f6311b-fdab-4c26-b6bf-b751e0997735'},
      ]
    )
    op.drop_table('user_friends_edges')
    op.drop_table('user_created_events_edges')
    op.drop_table('event_rsvps_edges')
    op.drop_table('event_hosts_edges')
    op.drop_table('assoc_edge_config')
    # ### end Alembic commands ###
